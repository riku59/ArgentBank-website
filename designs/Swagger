swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Visualiser les transactions du mois en cours
      description: API pour récupérer les transactions du mois en cours de l'utilisateur
      produces:
        - application/json
      responses:
        "200":
          description: Transactions récupérées avec succès
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
        "400":
          description: Erreur de requête
        "500":
          description: Erreur interne du serveur
  /user/transactions/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Visualiser les détails d'une transaction
      description: API pour récupérer les détails d'une transaction
      parameters:
        - in: path
          name: id
          description: Identifiant de la transaction a récupérer
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: Details de la transaction récupérés avec succès
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Erreur de requête
        "500":
          description: Erreur interne du serveur

  /user/transactions/{id}/note:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Ajouter un note a une transaction
      description: API pour ajouter une note a une transaction
      parameters:
        - in: path
          name: id
          description: Identifiant de la transaction à mettre à jour
          required: true
          type: integer
        - in: body
          name: body
          description: ajouter la note de la transaction
          required: true
          schema:
            type: object
            properties:
              note:
                type: string
      produces:
        - application/json
      responses:
        "200":
          description: Note de la transaction ajoutée avec succès
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Champ non valide
        "500":
          description: Erreur interne du serveur

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Mettre à jour la note d'une transaction
      description: API pour mettre à jour la note d'une transaction
      parameters:
        - in: path
          name: id
          description: Identifiant de la transaction à mettre à jour
          required: true
          type: integer
        - in: body
          name: body
          description: Nouvelle note de la transaction
          required: true
          schema:
            type: object
            properties:
              note:
                type: string
      produces:
        - application/json
      responses:
        "200":
          description: Note de la transaction mise à jour avec succès
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Champ non valide
        "500":
          description: Erreur interne du serveur

    delete:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Supprimer la note d'une transaction
      description: API pour supprimer la note d'une transaction
      parameters:
        - in: path
          name: id
          description: Identifiant de la transaction à mettre à jour
          required: true
          type: integer
        - in: body
          name: body
          description: supprimer la note de la transaction
          required: true
          schema:
            type: object
            properties:
              note:
                type: string
      produces:
        - application/json
      responses:
        "200":
          description: Note de la transaction supprimée avec succès
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Champ non valide
        "500":
          description: Erreur interne du serveur

  /user/transactions/{id}/category:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Ajouter une catégorie a une transaction
      description: API pour ajouter une catégorie a une transaction
      parameters:
        - in: path
          name: id
          description: Identifiant de la transaction à mettre à jour
          required: true
          type: integer
        - in: body
          name: body
          description: Ajout d'une catégorie a la transaction
          required: true
          schema:
            type: object
            properties:
              category:
                type: string
      produces:
        - application/json
      responses:
        "200":
          description: Catégorie de la transaction ajoutée avec succès
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Champ non valide
        "500":
          description: Erreur interne du serveur

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Mettre à jour la catégorie d'une transaction
      description: API pour mettre à jour la catégorie d'une transaction
      parameters:
        - in: path
          name: id
          description: Identifiant de la transaction à mettre à jour
          required: true
          type: integer
        - in: body
          name: body
          description: Nouvelle catégorie de la transaction
          required: true
          schema:
            type: object
            properties:
              category:
                type: string
      produces:
        - application/json
      responses:
        "200":
          description: Catégorie de la transaction mise à jour avec succès
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Champ non valide
        "500":
          description: Erreur interne du serveur

    delete:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Mettre à jour la catégorie d'une transaction
      description: API pour mettre à jour la catégorie d'une transaction
      parameters:
        - in: path
          name: id
          description: Identifiant de la transaction à mettre à jour
          required: true
          type: integer
        - in: body
          name: body
          description: Nouvelle catégorie de la transaction
          required: true
          schema:
            type: object
            properties:
              category:
                type: string
      produces:
        - application/json
      responses:
        "200":
          description: Catégorie de la transaction mise à jour avec succès
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Champ non valide
        "500":
          description: Erreur interne du serveur

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: integer
        description: Identifiant de la transaction
      amount:
        type: number
        description: Montant de la transaction
      date:
        type: string
        format: date
        description: Date de la transaction
      category:
        type: string
        description: Catégorie de la transaction
